// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TaxFiler.DB;

#nullable disable

namespace TaxFiler.DB.Migrations
{
    [DbContext(typeof(TaxFilerContext))]
    [Migration("20250716170256_AddVendorNameToDocument")]
    partial class AddVendorNameToDocument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TaxFiler.DB.Model.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("TaxFiler.DB.Model.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ExternalRef")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateOnly?>("InvoiceDate")
                        .HasColumnType("date");

                    b.Property<string>("InvoiceNumber")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("Orphaned")
                        .HasColumnType("boolean");

                    b.Property<bool>("Parsed")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("Skonto")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Total")
                        .HasColumnType("numeric");

                    b.Property<string>("VendorName")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("TaxFiler.DB.Model.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("integer");

                    b.Property<string>("Counterparty")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("DocumentId")
                        .HasColumnType("integer");

                    b.Property<decimal>("GrossAmount")
                        .HasColumnType("numeric");

                    b.Property<bool?>("IsIncomeTaxRelevant")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsOutgoing")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsSalesTaxRelevant")
                        .HasColumnType("boolean");

                    b.Property<decimal?>("NetAmount")
                        .HasColumnType("numeric");

                    b.Property<string>("SenderReceiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("numeric");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("integer");

                    b.Property<decimal?>("TaxRate")
                        .HasColumnType("numeric");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransactionDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionNote")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("DocumentId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("TaxFiler.DB.Model.TransactionDocumentMatcher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("AmountMatches")
                        .HasColumnType("boolean");

                    b.Property<string>("TransactionCommentPattern")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TransactionReceiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TransactionDocumentMatchers");
                });

            modelBuilder.Entity("TaxFiler.DB.Model.Transaction", b =>
                {
                    b.HasOne("TaxFiler.DB.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TaxFiler.DB.Model.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId");

                    b.Navigation("Account");

                    b.Navigation("Document");
                });
#pragma warning restore 612, 618
        }
    }
}
